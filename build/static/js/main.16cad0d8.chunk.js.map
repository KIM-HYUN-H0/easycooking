{"version":3,"sources":["component/Header.js","component/Content.js","component/Footer.js","component/CardRecipe.js","component/Recipe.js","component/List.js","component/Write.js","component/Detail.js","component/Modify.js","component/ModifyCT.js","component/Searchtitle.js","component/Repeat/Need.js","component/Searchneed.js","component/Search.js","component/ModifyNeed.js","component/Modifysauce.js","component/User/Login.js","component/User/Register.js","component/Manage.js","component/Repeat/Modal2.js","component/Test.js","component/User/Info.js","component/User/MyRefri.js","App.js","serviceWorker.js","stores/category.js","index.js"],"names":["Header","state","Logincheck","TopLink","to","anchorEl","handleclick","bind","handleclose","e","this","setState","currentTarget","axios","get","withCredentials","then","data","Avatar","aria-controls","aria-haspopup","onClick","res","console","log","catch","err","className","props","classes","flex","AppBar","position","appbar","Toolbar","IconButton","component","href","edge","homebutton","color","aria-label","Typography","variant","Button","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Link","Component","styled","a","withStyles","theme","marginRight","spacing","flexGrow","backgroundColor","Content","Paper","root","Tabs","Tab","icon","label","marginTop","width","bottom","CardRecipe","like","hate","params","idx","Box","box","m","Card","Link2","style","textDecoration","CardHeader","title","subheader","date","CardMedia","media","image","thumbnail","border","CardContent","author","CardActions","disableSpacing","view","document","location","display","height","paddingTop","Recipe","inject","observer","recipelist","resultcheck","CTload","category","Object","values","map","i","key","moment","board_date","format","Contentwrite","Mainlist","div","List","handleopen","getCategoryList","Modal","justifyContent","alignItems","aria-labelledby","aria-describedby","modal","Category","CTtitle","categorylist","match","span","ul","li","palette","background","paper","boxShadow","shadows","padding","Write","editorRef","React","createRef","list","needlist","saucelist","need","sauce","source","content","thumbnailcheck","need1","needchange","saucechange","sourceChange","categoryChange","titleChange","handlesubmit","result","value","number","name","sort","data2","push","ExpansionPanelDetails","FormControlLabel","control","Checkbox","onChange","ExpansionPanel","ExpansionPanelSummary","expandIcon","event","target","checked","concat","b","splice","indexOf","class","post","current","getInstance","getHtml","blob","formData","FormData","append","method","headers","response","thumbnailchekc","Error","callback","uploadImage","error","Main","Sub","Detailrecipe","Title","colSpan","TextField","Td","FormControl","formControl","InputLabel","Select","labelId","namechange","details","previewStyle","initialEditType","placeholder","ref","toolbarItems","hooks","addImageBlobHook","upload","table","td","th","flexDirection","margin","minWidth","Detail","detail","recipedelete","recipeview","recipedetail","recipeidx","result2","initialValue","textAlign","maxWidth","detail_title","detail_need","detail_author","detail_content","modifycall","temp","action","type","ModifyCT","handleKeyPress","categorySubmit","categoryname","categorytext","categorynum","categoryChange2","categorydelete","Listdiv","Categorytitle","Inputform","onKeyPress","Submitform","Listul","p","input","button","Searchtitle","submittext","titleresult","searchSubmit","count","getElementsByName","alert","Grid","grid","marginLeft","Need","needsearch","Searchneed","needresult","search","length","Search","handleChange","TabContext","TabList","TabPanel","ModifyNeed","needSubmit","needclass","needtext","classtext","classlist","needChange","needDelete","classChange2","classSubmit","classDelete","classChange","Needclass","Needlist","Modifysauce","Login","PWChange","pw","IDChange","username","password","Container","required","fullWidth","autoComplete","autoFocus","container","item","xs","Register","PW2Change","pw2","NICKChange","nickname","password2","Text","Manage","main","Mainnav","Navul","Navli","nav","Modal2","fontSize","overflow","checkedIcon","Test","LoadNeed2","SaveNeed","LoadRefri","LoadNeed","sort2","sort3","i2","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","renderOption","selected","renderInput","Info","MyRefri","App","exact","path","Modify","window","hostname","categorylist2","observable","Listli","createMuiTheme","typography","fontFamily","categoryStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.16cad0d8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Logincheck: <TopLink to=\"/login\">LOGIN</TopLink>,\r\n      anchorEl: null,\r\n    };\r\n    this.handleclick = this.handleclick.bind(this);\r\n    this.handleclose = this.handleclose.bind(this);\r\n  }\r\n  handleclick(e) {\r\n    this.setState({\r\n      anchorEl: e.currentTarget,\r\n    });\r\n  }\r\n  handleclose() {\r\n    this.setState({\r\n      anchorEl : null,\r\n    })\r\n  }\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\"http://localhost:3001/users/logincheck\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((data) => {\r\n        if (data.data !== false) {\r\n          this.setState({\r\n            Logincheck: (\r\n              <>\r\n                <Avatar\r\n                  aria-controls=\"simple-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={this.handleclick}\r\n                >\r\n                  H\r\n                </Avatar>\r\n              </>\r\n            ),\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  async logout() {\r\n    await axios\r\n      .get(\"http://localhost:3001/users/logout\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={this.props.classes.flex}>\r\n          <AppBar position=\"static\" className={this.props.classes.appbar}>\r\n            <Toolbar>\r\n              <IconButton\r\n                component=\"a\"\r\n                href=\"/\"\r\n                edge=\"start\"\r\n                className={this.props.classes.homebutton}\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n              >\r\n                <HomeIcon />\r\n              </IconButton>\r\n\r\n              <Typography variant=\"h6\" className={this.props.classes.flex}>\r\n                내 냉장고를 부탁해\r\n              </Typography>\r\n              <Button color=\"inherit\">{this.state.Logincheck}</Button>\r\n              <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={this.state.anchorEl} \r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={Boolean(this.state.anchorEl)}\r\n                  onClose={this.handleclose}\r\n                >\r\n                  <MenuItem component={Link} to=\"/myrefri\" onClick={this.handleclose}>내 냉장고</MenuItem>\r\n                  <MenuItem component={Link} to=\"/info\" onClick={this.handleclose}>내 정보</MenuItem>\r\n                  <MenuItem onClick={this.handleclose}>로그아웃</MenuItem>\r\n                </Menu>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  homebutton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  flex: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar: {\r\n    backgroundColor: \"#AFDB9F\",\r\n    color: \"white\",\r\n  },\r\n});\r\nconst Topa = styled.a`\r\n  color: white;\r\n  text-decoration: none;\r\n`;\r\nconst TopLink = styled(Link)`\r\n  color: white;\r\n  text-decoration: none;\r\n`;\r\nexport default withStyles(styles)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paper className={this.props.classes.root}>\r\n          <Tabs variant=\"fullWidth\">\r\n            <Tab\r\n              component={Link}\r\n              to=\"/board/0\"\r\n              icon={<MenuBookIcon />}\r\n              label=\"Recipe\"\r\n            />\r\n            <Tab\r\n              component={Link}\r\n              to=\"/search\"\r\n              icon={<SearchIcon />}\r\n              label=\"Search\"\r\n            />\r\n          </Tabs>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  root: {\r\n    marginTop:'500px',\r\n    width:'100%',\r\n    position:'fixed',\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Content);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer id=\"footer\">\r\n                여기는 푸터임다\r\n        </footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nclass CardRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.like = this.like.bind(this);\r\n    this.hate = this.hate.bind(this);\r\n  }\r\n  async like() {\r\n    await axios.get('http://localhost:3001/DBapi/like', {\r\n      params : {\r\n        idx : this.props.idx\r\n      }\r\n    }, {withCredentials : true})\r\n  }\r\n  async hate() {\r\n    await axios.get('http://localhost:3001/DBapi/hate', {\r\n      params : {\r\n        idx : this.props.idx\r\n      }\r\n    }, {withCredentials : true})\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n      <Box className={classes.box} m={0}>\r\n        <Card className={classes.root}>\r\n          <Link2 to={\"/board/detail/\" + this.props.idx} style={{textDecoration:'none'}}>\r\n          <CardHeader title={this.props.title} subheader={this.props.date} />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={this.props.thumbnail}\r\n            title={this.props.title}\r\n            style={{border:'1px solid gray'}}\r\n          ></CardMedia>\r\n          <CardContent>\r\n            <Typography>{this.props.author} 요리사</Typography>\r\n          </CardContent>\r\n          </Link2>\r\n          <CardActions disableSpacing>\r\n            <IconButton color=\"inherit\" aria-label=\"view\">\r\n              <VisibilityIcon />\r\n              <Typography>{this.props.view}</Typography>\r\n            </IconButton>\r\n            <IconButton component=\"a\" href={document.location.href} onClick={this.like} color=\"secondary\" aria-label=\"add to favorites\">\r\n              <ThumbUpAltIcon />\r\n              <Typography>{this.props.like}</Typography>\r\n            </IconButton>\r\n            <IconButton component=\"a\" href={document.location.href} onClick={this.hate} color=\"primary\" aria-label=\"share\">\r\n              <ThumbDownIcon />\r\n              <Typography>{this.props.hate}</Typography>\r\n            </IconButton>\r\n          </CardActions>\r\n        </Card>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  box : {\r\n    display : 'inline-block',\r\n  },\r\n  root: {\r\n    width: 300,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n});\r\nconst Link2 = styled(Link)`\r\n  color : black;\r\n`;\r\n\r\nexport default withStyles(styles)(CardRecipe);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport CardRecipe from './CardRecipe';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n@inject(\"category\")\r\n@observer\r\nclass Recipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipelist: null,\r\n      resultcheck: null\r\n    };\r\n  }\r\n  async componentDidUpdate() {\r\n    this.CTload();\r\n  }\r\n  async componentDidMount() {\r\n    this.CTload();\r\n  }\r\n\r\n  async CTload() {\r\n    if (this.props.category !== this.state.resultcheck) {\r\n      await axios\r\n        .get(\"http://localhost:3001/board/recipelist\", {\r\n          params: {\r\n            idx: this.props.category\r\n          }\r\n        })\r\n        .then(data => {\r\n          this.setState({\r\n            resultcheck: this.props.category,\r\n            recipelist: Object.values(data.data.data).map((data, i) => (\r\n              <span key={i}>\r\n                  <CardRecipe \r\n                  idx={data.idx}\r\n                  thumbnail={data.thumbnail}\r\n                  author={data.author}\r\n                  date={moment(data.board_date).format(\"YYYY-MM-DD hh:mm\")}\r\n                  view={data.view}\r\n                  like={data.like}\r\n                  hate={data.hate}\r\n                  title={data.title}/>\r\n              </span>\r\n            ))\r\n          });\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      <Contentwrite>\r\n            <Link to=\"/write\" style={{textDecoration : 'none'}}><Button variant=\"outlined\">글쓰기</Button></Link>\r\n      </Contentwrite>\r\n        <Mainlist>\r\n          {this.state.recipelist}\r\n        </Mainlist>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst Mainlist = styled.div`\r\n  text-align:center;\r\n`;\r\nconst Contentwrite = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nexport default Recipe;\r\n","import React, { Component } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Recipe from \"./Recipe\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n@inject(\"category\")\r\n@observer\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    };\r\n    this.handleclose = this.handleclose.bind(this);\r\n    this.handleopen = this.handleopen.bind(this);\r\n  }\r\n\r\n  handleopen() {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  }\r\n  handleclose() {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  }\r\n  render() {\r\n    const { category } = this.props;\r\n    category.getCategoryList();\r\n    return (\r\n      <>\r\n        <Button style={{ color: \"#b8dea8\" }} onClick={this.handleopen}>\r\n          Category\r\n        </Button>\r\n        <Modal\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          onClose={this.handleclose}\r\n          aria-labelledby=\"CategoryModal\"\r\n          aria-describedby=\"Category\"\r\n        >\r\n          <>\r\n            <div className={this.props.classes.modal}>\r\n              <Category>카테고리 선택</Category>\r\n              <CTtitle to=\"/board/0\" style={{ textDecoration: \"none\" }}>\r\n                전체보기\r\n              </CTtitle>\r\n              {category.categorylist}\r\n            </div>\r\n          </>\r\n        </Modal>\r\n\r\n        <Recipe category={this.props.match.params.idx} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n});\r\n\r\nconst Category = styled.span`\r\n  color: #b8dea8;\r\n  display: block;\r\n`;\r\nconst Listul = styled.ul`\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\nconst Listli = styled.li`\r\n  display: inline-block;\r\n  list-style: none;\r\n  font-size: 20px;\r\n  margin-left: 1rem;\r\n`;\r\nconst CTtitle = styled(Link)`\r\n  color: black;\r\n`;\r\nexport default withStyles(styles)(List);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport styled from \"styled-components\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n@inject(\"category\")\r\n@observer\r\nclass Write extends Component {\r\n  editorRef = React.createRef();\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      list: null,\r\n      needlist: null,\r\n      saucelist: null,\r\n      title: null,\r\n      category: null,\r\n      need: [],\r\n      sauce: [],\r\n      source: null,\r\n      content: null,\r\n      thumbnailcheck: 0,\r\n      thumbnail: null,\r\n      need1 : null,\r\n    };\r\n    this.needchange = this.needchange.bind(this);\r\n    this.saucechange = this.saucechange.bind(this);\r\n    this.sourceChange = this.sourceChange.bind(this);\r\n    this.categoryChange = this.categoryChange.bind(this);\r\n    this.titleChange = this.titleChange.bind(this);\r\n    this.handlesubmit = this.handlesubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.needlist();\r\n    this.categorylist();\r\n    this.saucelist();\r\n  }\r\n  async categorylist() {\r\n    const result = await axios.get(\r\n      \"http://localhost:3001/category/categorylist\"\r\n    );\r\n    if (this.state.list === null) {\r\n      this.setState({\r\n        list: Object.values(result.data.data).map((data, i) => (\r\n          <MenuItem value={data.number} key={i}>\r\n            {data.name}\r\n          </MenuItem>\r\n        )),\r\n      });\r\n    }\r\n  }\r\n  async saucelist() {\r\n    let sort = [];\r\n    await axios\r\n      .get(\"http://localhost:3001/sauce/saucelist\")\r\n      .then((data) => {\r\n        Object.values(data.data.data).map((data2, i) => {\r\n          sort.push(\r\n            <>\r\n              <ExpansionPanelDetails\r\n                className={this.props.classes.theme}\r\n                key={i}\r\n              >\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      onChange={(e) => this.saucechange(e)}\r\n                      name=\"sauce\"\r\n                      color=\"primary\"\r\n                      value={data2.name}\r\n                    />\r\n                  }\r\n                  label={data2.name}\r\n                />\r\n              </ExpansionPanelDetails>\r\n            </>\r\n          );\r\n        });\r\n        this.setState({\r\n          saucelist: (\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography>양념 선택</Typography>\r\n              </ExpansionPanelSummary>\r\n              {sort}\r\n            </ExpansionPanel>\r\n          ),\r\n        });\r\n        /*\r\n        this.setState({\r\n          saucelist: Object.values(data.data.data).map((data2, i) => {\r\n            sort.push(\r\n              <>\r\n                <ExpansionPanelDetails\r\n                  className={this.props.classes.theme}\r\n                  key={i}\r\n                >\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) => this.needchange(e)}\r\n                        name={data.class}\r\n                        color=\"primary\"\r\n                        value={data2.name}\r\n                      />\r\n                    }\r\n                    label={data2.name}\r\n                  />\r\n                </ExpansionPanelDetails>\r\n              </>\r\n            ).then(() => {\r\n              return (\r\n                <ExpansionPanel>\r\n                  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    key={i}\r\n                  >\r\n                    {sort}\r\n                  </ExpansionPanelSummary>\r\n                </ExpansionPanel>\r\n              );\r\n            })\r\n            \r\n            \r\n          })\r\n        });\r\n        */\r\n      });\r\n  }\r\n  async needchange(event) {\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        need: this.state.need.concat(event.target.value),\r\n      });\r\n    } else {\r\n      const a = this.state.need;\r\n      const b = event.target.value;\r\n      a.splice(a.indexOf(b), 1);\r\n      this.setState({\r\n        need: a,\r\n      });\r\n    }\r\n  }\r\n  async saucechange(event) {\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        sauce: this.state.sauce.concat(event.target.value),\r\n      });\r\n    } else {\r\n      const a = this.state.sauce;\r\n      const b = event.target.value;\r\n      a.splice(a.indexOf(b), 1);\r\n      this.setState({\r\n        sauce: a,\r\n      });\r\n    }\r\n  }\r\n  async needlist() {\r\n    const result = await axios.get(\r\n      \"http://localhost:3001/need/needlist\"\r\n    );\r\n    if (this.state.needlist === null) {\r\n      this.setState({\r\n        need1 : result.data.data,\r\n        needlist: Object.values(result.data.data).map((data, i) => {\r\n          let sort = [];\r\n          sort.push(\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n              key={i}\r\n            >\r\n              <Typography>{data.class}</Typography>\r\n            </ExpansionPanelSummary>\r\n          );\r\n          Object.values(data.need).map((data2, i) => {\r\n            sort.push(\r\n              <>\r\n                <ExpansionPanelDetails\r\n                  className={this.props.classes.theme}\r\n                  key={i}\r\n                >\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) => this.needchange(e)}\r\n                        name={data.class}\r\n                        color=\"primary\"\r\n                        value={data2.name}\r\n                      />\r\n                    }\r\n                    label={data2.name}\r\n                  />\r\n                </ExpansionPanelDetails>\r\n              </>\r\n            );\r\n          });\r\n\r\n          return <ExpansionPanel>{sort}</ExpansionPanel>;\r\n        }),\r\n      });\r\n    }\r\n  }\r\n  titleChange(event) {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n  categoryChange(event) {\r\n    this.setState({\r\n      category: event.target.value,\r\n    });\r\n  }\r\n  sourceChange(event) {\r\n    this.setState({\r\n      source: event.target.value,\r\n    });\r\n  }\r\n  async handlesubmit() {\r\n    console.log(this.state.thumbnail);\r\n    axios.post(\r\n      \"http://localhost:3001/board/recipewrite\",\r\n      {\r\n        thumbnail: this.state.thumbnail,\r\n        title: this.state.title,\r\n        category: this.state.category,\r\n        need: this.state.need,\r\n        sauce: this.state.sauce,\r\n        source: this.state.source,\r\n        content: this.editorRef.current.getInstance().getHtml(),\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n  uploadImage(blob) {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", blob);\r\n    return axios(\"http://localhost:3001/board/imageupload\", {\r\n      method: \"POST\",\r\n      data: formData,\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        if (this.state.thumbnailcheck === 0) {\r\n          this.setState({\r\n            thumbnailchekc: 1,\r\n            thumbnail: response.data,\r\n          });\r\n        }\r\n        return response.data;\r\n      }\r\n      throw new Error(\"Server or network error\");\r\n    });\r\n  }\r\n\r\n  onAddImageBlob(blob, callback) {\r\n    this.uploadImage(blob)\r\n      .then((response) => {\r\n        if (!response) {\r\n          throw new Error(\"Validation error\");\r\n        } else callback(response, \"alt text\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  namechange(e) {\r\n    if (e.target.value === \"\") {\r\n      console.log(\"dd\");\r\n      this.setState({\r\n        needlist: Object.values(this.state.need1).map((data, i) => {\r\n          let sort = [];\r\n          sort.push(\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n              key={i}\r\n            >\r\n              <Typography>{data.class}</Typography>\r\n            </ExpansionPanelSummary>\r\n          );\r\n          Object.values(data.need).map((data2, i) => {\r\n            sort.push(\r\n              <>\r\n                <ExpansionPanelDetails key={i}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) => this.needchange(e)}\r\n                        name={data.class}\r\n                        color=\"primary\"\r\n                        value={data2.name}\r\n                      />\r\n                    }\r\n                    label={data2.name}\r\n                  />\r\n                </ExpansionPanelDetails>\r\n              </>\r\n            );\r\n          });\r\n          return <ExpansionPanel>{sort}</ExpansionPanel>;\r\n        }),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        needlist: Object.values(this.state.need1).map((data, i) => {\r\n          let sort = [];\r\n          Object.values(data.need).map((data2, i) => {\r\n            if (data2.name.indexOf(e.target.value) != -1) {\r\n              sort.push(\r\n                  <ExpansionPanelDetails key={i}>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          onChange={(e) => this.needchange(e)}\r\n                          name={data.class}\r\n                          color=\"primary\"\r\n                          value={data2.name}\r\n                        />\r\n                      }\r\n                      label={data2.name}\r\n                    />\r\n                  </ExpansionPanelDetails>\r\n                \r\n              );\r\n            }\r\n            \r\n\r\n          });\r\n          return <>{sort}</>;\r\n        }),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Main>\r\n          <Sub>\r\n            <Detailrecipe>\r\n              <thead>\r\n                <tr>\r\n                  <Title colSpan={7}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"요리 이름\"\r\n                      variant=\"outlined\"\r\n                      onChange={this.titleChange}\r\n                    />\r\n                  </Title>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <Td>\r\n                    <FormControl className={this.props.classes.formControl}>\r\n                      <InputLabel>요리 종류</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        onChange={this.categoryChange}\r\n                      >\r\n                        {this.state.list}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Td>\r\n                </tr>\r\n              </tbody>\r\n              <tbody>\r\n                <tr>\r\n                  <Td>\r\n                    <ExpansionPanel>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography>재료 선택</Typography>\r\n                        <TextField\r\n                          label=\"재료 찾기\"\r\n                          onChange={(e) => this.namechange(e)}\r\n                        />\r\n                      </ExpansionPanelSummary>\r\n                      <ExpansionPanelDetails\r\n                        className={this.props.classes.details}\r\n                      >\r\n                        {this.state.needlist}\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  </Td>\r\n                </tr>\r\n              </tbody>\r\n              <tbody>\r\n                <tr>\r\n                  <Td>{this.state.saucelist}</Td>\r\n                </tr>\r\n              </tbody>\r\n              <tbody>\r\n                <tr>\r\n                  <Td>\r\n                    <TextField\r\n                      label=\"출처도 적어주세요 !\"\r\n                      onChange={this.sourceChange}\r\n                    />\r\n                  </Td>\r\n                </tr>\r\n              </tbody>\r\n            </Detailrecipe>\r\n\r\n            <Editor\r\n              previewStyle=\"vertical\"\r\n              height=\"300px\"\r\n              initialEditType=\"wysiwyg\"\r\n              placeholder=\"가장 마지막 사진이 썸네일로 자동저장됩니다.\"\r\n              ref={this.editorRef}\r\n              toolbarItems={[\r\n                'image'\r\n              ]}\r\n              hooks={{\r\n                addImageBlobHook: async (blob, callback) => {\r\n                  const upload = await this.uploadImage(blob);\r\n                  callback(upload, \"alt text\");\r\n                  return false;\r\n                },\r\n              }}\r\n            />\r\n            <div>\r\n              <a href=\"/\" onClick={this.handlesubmit}>\r\n                작성\r\n              </a>\r\n            </div>\r\n          </Sub>\r\n        </Main>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  details: {\r\n    flexDirection: \"column\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n});\r\n\r\nconst Sub = styled.div`\r\n  display: inline-block;\r\n`;\r\nconst Main = styled.div`\r\n  text-align: center;\r\n`;\r\nconst Detailrecipe = styled.table`\r\n  width: 100%;\r\n  color: #549a39;\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n`;\r\nconst Td = styled.td``;\r\nconst Th = styled.th`\r\n  color: #b8dea8;\r\n`;\r\nconst Title = styled.th`\r\n  font-size: 30px;\r\n`;\r\n\r\nexport default withStyles(styles)(Write);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Viewer } from \"@toast-ui/react-editor\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\n\r\nclass Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      detail: null,\r\n    };\r\n    this.recipedelete = this.recipedelete.bind(this);\r\n    this.like = this.like.bind(this);\r\n    this.hate = this.hate.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    this.recipeview();\r\n    this.recipedetail();\r\n  }\r\n  async like() {\r\n    await axios.get(\r\n      \"http://localhost:3001/board/like\",\r\n      {\r\n        params: {\r\n          idx: this.props.match.params.recipeidx,\r\n        },\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n  async hate() {\r\n    await axios.get(\r\n      \"http://localhost:3001/board/hate\",\r\n      {\r\n        params: {\r\n          idx: this.props.match.params.recipeidx,\r\n        },\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n  async recipeview() {\r\n    await axios.get(\"http://localhost:3001/board/view\", {\r\n      params: {\r\n        idx: this.props.match.params.recipeidx,\r\n      },\r\n    });\r\n  }\r\n  async recipedetail() {\r\n    const result = await axios.get(\r\n      \"http://localhost:3001/board/recipedetail\",\r\n      {\r\n        params: {\r\n          idx: this.props.match.params.recipeidx,\r\n        },\r\n        withCredentials: true,\r\n      }\r\n    );\r\n    if (this.state.detail === null && result) {\r\n      const data = result.data.data[0];\r\n      let result2 = [];\r\n      this.setState({\r\n        detail: await axios\r\n          .get(\"http://localhost:3001/category/categorycheck\", {\r\n            params: { idx: data.category },\r\n          })\r\n          .then((data2) => {\r\n            console.log(data.date);\r\n            result2.push(\r\n              <>\r\n                <Box className={this.props.classes.box} m={0}>\r\n                  <Card className={this.props.classes.root}>\r\n                    <CardHeader title={data.title} subheader={moment(data.board_date).format(\"YYYY-MM-DD hh:mm\")} />\r\n                    <CardMedia\r\n                      className={this.props.classes.media}\r\n                      image={data.thumbnail}\r\n                      title={data.title}\r\n                      style={{ border: \"1px solid gray\" }}\r\n                    ></CardMedia>\r\n                    <CardContent>\r\n                      <Typography>{data.author} 요리사</Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                      <IconButton color=\"inherit\" aria-label=\"view\">\r\n                        <VisibilityIcon />\r\n                        <Typography>{data.view}</Typography>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        component=\"a\"\r\n                        href={document.location.href}\r\n                        onClick={data.like}\r\n                        color=\"secondary\"\r\n                        aria-label=\"add to favorites\"\r\n                      >\r\n                        <ThumbUpAltIcon />\r\n                        <Typography>{data.like}</Typography>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        component=\"a\"\r\n                        href={document.location.href}\r\n                        onClick={this.hate}\r\n                        color=\"primary\"\r\n                        aria-label=\"share\"\r\n                      >\r\n                        <ThumbDownIcon />\r\n                        <Typography>{data.hate}</Typography>\r\n                      </IconButton>\r\n                    </CardActions>\r\n                    <CardContent>\r\n                      <hr />\r\n                      <div id=\"viewer\">\r\n                      <Viewer style={{border:'5px solid gray'}} initialValue={data.content} />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Box>\r\n              </>\r\n            );\r\n\r\n            return <>{result2}</>;\r\n          }),\r\n      });\r\n    }\r\n  }\r\n\r\n  //<div dangerouslySetInnerHTML={{__html: data.content }}></div>\r\n  async recipedelete() {\r\n    const result = await axios.get(\r\n      \"http://localhost:3001/board/recipedelete\",\r\n      {\r\n        params: {\r\n          idx: this.props.match.params.recipeidx,\r\n        },\r\n      }\r\n    );\r\n    console.log(result);\r\n    if (result) {\r\n      console.log(\"삭제되었습니다.\");\r\n    } else {\r\n      console.log(\"서버와의 연결을 실패했습니다.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Main>\r\n            <span>\r\n              <Button\r\n                component=\"a\"\r\n                href={\"/modify/\" + this.props.match.params.recipeidx}\r\n              >\r\n                수정\r\n              </Button>\r\n            </span>\r\n            <span>\r\n              <Button component=\"a\" href=\"/\" onClick={this.recipedelete}>\r\n                삭제\r\n              </Button>\r\n            </span>\r\n            {this.state.detail}\r\n        </Main>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  box: {\r\n    textAlign: 'center',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    display : 'inline-block',\r\n    maxWidth:'1000px',\r\n    minWidth:'350px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n});\r\n\r\nconst Main = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport default withStyles(styles)(Detail);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Write extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: null,\r\n      detail_title: '-',\r\n      detail_need: '-',\r\n      detail_author: '-',\r\n      detail_content: '-'\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.categorylist();\r\n    this.modifycall();\r\n  }\r\n  async categorylist() {\r\n    const result = await axios.get(\"http://localhost:3001/DBapi/categorylist\");\r\n    if (this.state.list === null) {\r\n      this.setState({\r\n        list: Object.values(result.data.data).map((data, i) => (\r\n          <option value={data.number} key={i}>\r\n            {data.name}\r\n          </option>\r\n        )),\r\n      });\r\n    }\r\n  }\r\n  async modifycall() {\r\n    const temp = this.props.match.params.idx;\r\n    await axios.get(\"http://localhost:3001/DBapi/recipedetail\", {\r\n      params : {\r\n          idx : temp\r\n      }\r\n    })\r\n    .then((data) => {\r\n      const result = data.data.data;\r\n      this.setState({\r\n        detail_author : result[0].author,\r\n        detail_content : result[0].content,\r\n        detail_need : result[0].need,\r\n        detail_title : result[0].title\r\n      })\r\n    })\r\n    /*\r\n    const result = await axios.get(\"http://localhost:3001/DBapi/recipedetail\", {\r\n            params : {\r\n                idx : temp\r\n            }\r\n        });       \r\n    if (this.state.detail_title === '-') {\r\n      this.setState({\r\n        detail_title: result.data.data.title,\r\n        detail_author: result.data.data.author,\r\n        detail_need: result.data.data.need,\r\n        detail_content: result.data.data.content,\r\n      });\r\n    }\r\n    */\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <form method=\"post\" action=\"http://localhost:3001/DBapi/recipewrite\">\r\n          <div>컨텐츠를 수정중입니다</div>\r\n          <div>요리 이름</div>\r\n          <div>\r\n            <input type=\"text\" name=\"title\" value={this.state.detail_title}/>\r\n          </div>\r\n          <div>주제</div>\r\n          <div>\r\n            <select name=\"category\">\r\n              <option value=\"default\">-</option>\r\n              {this.state.list}\r\n            </select>\r\n          </div>\r\n          <div>작성자</div>\r\n          <div>\r\n            <input type=\"text\" name=\"author\" value={this.state.detail_author}/>\r\n          </div>\r\n          <div>재료</div>\r\n          <div>\r\n            <input type=\"text\" name=\"need\" value={this.state.detail_need}/>\r\n          </div>\r\n          <div>조리 방법</div>\r\n          <div>\r\n            <input type=\"text\" name=\"content\" value={this.state.detail_content}/>\r\n          </div>\r\n          <div>\r\n            <input type=\"submit\" value=\"작성\"/>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Write;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {  Link  } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nclass ModifyCT extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryname : null,\r\n      categorytext: null,\r\n      categorynum : null,\r\n      categorylist : null,\r\n    };\r\n    this.categoryChange = this.categoryChange.bind(this);\r\n    this.categoryChange2 = this.categoryChange2.bind(this);\r\n    this.categorySubmit = this.categorySubmit.bind(this);\r\n    this.categorydelete = this.categorydelete.bind(this);\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const {idx} = this.props.match.params;\r\n    if(this.state.categorynum !== idx){\r\n      this.setState({ categorynum : idx})\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.categorylist();\r\n  }\r\n  //category control\r\n  async categoryChange(event) {\r\n    await this.setState({ categorytext: event.target.value });\r\n  }\r\n  async categorySubmit(event) {\r\n    await axios.post(\r\n      \"http://localhost:3001/category/categorysave\",\r\n      {\r\n        name: this.state.categorytext,\r\n      }\r\n    ).then((data) => {\r\n      console.log('submit')\r\n      document.location.href = '/modifyCT';\r\n    });\r\n  }\r\n  async categorydelete(event) {\r\n    await axios.post(\r\n      \"http://localhost:3001/category/categorydelete\",\r\n      {\r\n        name: this.state.categorytext,\r\n      }\r\n    )\r\n    .then((data)=> {\r\n      console.log('delete')\r\n      document.location.href = '/modifyCT';\r\n    });\r\n  }\r\n\r\n  async categoryChange2(event) {\r\n    this.setState({\r\n      categorytext : event.target.value\r\n    })\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.categorySubmit();\r\n    }\r\n  };\r\n  async categorylist() {\r\n    const result = await axios.get(\"http://localhost:3001/category/categorylist\");\r\n    if (this.state.categorylist === null) {\r\n      this.setState({ \r\n        categorylist : Object.values(result.data.data)\r\n        .map((data, i) => (\r\n          <label id=\"categorySet\" key={i}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"category\"\r\n                    value={data.name}\r\n                    onChange={this.categoryChange2}\r\n                  ></input>\r\n                  {data.name}\r\n                </label>\r\n        ))\r\n      })\r\n    }\r\n  }\r\n  //category control end\r\n  render() {    \r\n    return (\r\n      <>\r\n        <Listdiv>\r\n          <Category>\r\n          <Categorytitle>Category</Categorytitle>\r\n            <Listul>\r\n              {this.state.categorylist}\r\n            </Listul>\r\n          </Category>\r\n          <Inputform\r\n                type=\"text\"\r\n                value={this.state.categorytext}\r\n                placeholder=\"등록할 카테고리 입력\"\r\n                onChange={this.categoryChange}\r\n                onKeyPress={this.handleKeyPress}\r\n              ></Inputform>\r\n              <Submitform type=\"submit\" onClick={this.categorySubmit}>\r\n                등록\r\n              </Submitform>\r\n              <Submitform type=\"submit\" onClick={this.categorydelete}>\r\n                삭제\r\n              </Submitform>\r\n        </Listdiv>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst Category = styled.div\r\n`\r\n`;\r\nconst Listdiv = styled.div\r\n`padding-top: 0;\r\ntext-align:center;\r\nmargin-top:0px;\r\ncolor : #549A39;`\r\nconst Listul = styled.ul\r\n`vertical-align: top;\r\ntext-align:left;\r\nborder : 1px solid #CFCFCF;\r\ndisplay : inline-block;\r\nwidth:20%;`\r\nconst Listli = styled.li\r\n`list-style: none;\r\nmargin-top:1rem;`\r\nconst Categorytitle = styled.p\r\n`font-size : 30px;\r\n`\r\nconst Inputform = styled.input\r\n`\r\ndisplay : block;\r\nmargin:auto;\r\ntext-align:center;\r\nfont-size : 30px;\r\nwidth : 300px;\r\nheight : 60px;\r\nmargin-top: 1em;\r\ncolor : #F48060;\r\nborder : 1px solid #CFCFCF;\r\n&:focus {\r\n  outline : 2px solid #AFDB9F;\r\n}\r\n`\r\nconst Submitform = styled.button\r\n`\r\nmargin:30px;\r\nwidth:60px;\r\nheight : 60px;\r\nborder:1px solid gray;\r\nborder-radius : 10px;\r\nbackground-color : #AFDB9F;\r\ncolor : white;\r\nfont-size : 25px;\r\nfont-family : 'KyoboHand';\r\ntext-decoration : none;\r\nmargin-top : 1em;\r\ntext-align:center;\r\n&:hover {\r\n  background-color : #549A39;\r\n}\r\n`;\r\n\r\nexport default ModifyCT;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardRecipe from \"./CardRecipe\";\r\n\r\nclass Searchtitle extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      submittext: null,\r\n      titleresult: null,\r\n    };\r\n    this.searchSubmit = this.searchSubmit.bind(this);\r\n  }\r\n\r\n  async searchSubmit(event) {\r\n    const count = document.getElementsByName(\"search\")[0].value;\r\n    if (count === \"\") {\r\n      alert(\"검색어를 입력해주세요\");\r\n    } else {\r\n      await axios\r\n        .get(\"http://localhost:3001/search/titlesearch\", {\r\n          params: {\r\n            name: count,\r\n          },\r\n        })\r\n        .then((data) => {\r\n          this.setState({\r\n            titleresult: Object.values(data.data.data).map((data, i) => (\r\n              <span key={i}>\r\n                <CardRecipe\r\n                  idx={data.idx}\r\n                  thumbnail={data.thumbnail}\r\n                  author={data.author}\r\n                  date={moment(data.board_date).format(\"YYYY-MM-DD hh:mm\")}\r\n                  view={data.view}\r\n                  like={data.like}\r\n                  hate={data.hate}\r\n                  title={data.title}\r\n                />\r\n              </span>\r\n            )),\r\n          });\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Grid className={classes.grid}>\r\n          <TextField id=\"standard-basic\" label=\"요리명\" name=\"search\" />\r\n          <Button variant=\"contained\" onClick={this.searchSubmit}>\r\n            검색\r\n          </Button>\r\n        </Grid>\r\n        {this.state.titleresult}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  grid: {\r\n    textAlign: \"center\",\r\n    marginLeft: theme.spacing(5),\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Searchtitle);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Need extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      need1: null,\r\n      needlist: null,\r\n    };\r\n    this.needchange = this.needchange.bind(this);\r\n    this.namechange = this.namechange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.needlist();\r\n  }\r\n  async needlist() {\r\n    const { classes } = this.props;\r\n    const result = await axios.get(\"http://192.168.219.103:3001/need/needlist\");\r\n    if (this.state.needlist === null) {\r\n      this.setState({\r\n        need1: result.data.data,\r\n        needlist: Object.values(result.data.data).map((data, i) => {\r\n          let sort = [];\r\n          sort.push(\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n              key={i}\r\n            >\r\n              <Typography>{data.class}</Typography>\r\n            </ExpansionPanelSummary>\r\n          );\r\n          Object.values(data.need).map((data2, i) => {\r\n            sort.push(\r\n              <>\r\n                <ExpansionPanelDetails key={i}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) => this.needchange(e)}\r\n                        name={data.class}\r\n                        color=\"primary\"\r\n                        value={data2.name}\r\n                      />\r\n                    }\r\n                    label={data2.name}\r\n                  />\r\n                </ExpansionPanelDetails>\r\n              </>\r\n            );\r\n          });\r\n          return <ExpansionPanel>{sort}</ExpansionPanel>;\r\n        }),\r\n      });\r\n    }\r\n  }\r\n  needchange(event) {\r\n    console.log(\"gg\");\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        needsearch: this.state.needsearch.concat(event.target.value),\r\n      });\r\n    } else {\r\n      const a = this.state.needsearch;\r\n      const b = event.target.value;\r\n      a.splice(a.indexOf(b), 1);\r\n      this.setState({\r\n        needsearch: a,\r\n      });\r\n    }\r\n  }\r\n  namechange(e) {\r\n    if (e.target.value === \"\") {\r\n      console.log(\"dd\");\r\n      this.setState({\r\n        needlist: Object.values(this.state.need1).map((data, i) => {\r\n          let sort = [];\r\n          sort.push(\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n              key={i}\r\n            >\r\n              <Typography>{data.class}</Typography>\r\n            </ExpansionPanelSummary>\r\n          );\r\n          Object.values(data.need).map((data2, i) => {\r\n            sort.push(\r\n              <>\r\n                <ExpansionPanelDetails key={i}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) => this.needchange(e)}\r\n                        name={data.class}\r\n                        color=\"primary\"\r\n                        value={data2.name}\r\n                      />\r\n                    }\r\n                    label={data2.name}\r\n                  />\r\n                </ExpansionPanelDetails>\r\n              </>\r\n            );\r\n          });\r\n          return <ExpansionPanel>{sort}</ExpansionPanel>;\r\n        }),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        needlist: Object.values(this.state.need1).map((data, i) => {\r\n          let sort = [];\r\n          Object.values(data.need).map((data2, i) => {\r\n            if (data2.name.indexOf(e.target.value) != -1) {\r\n              sort.push(\r\n                <ExpansionPanelDetails key={i}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        onChange={(e) => this.needchange(e)}\r\n                        name={data.class}\r\n                        color=\"primary\"\r\n                        value={data2.name}\r\n                      />\r\n                    }\r\n                    label={data2.name}\r\n                  />\r\n                </ExpansionPanelDetails>\r\n              );\r\n            }\r\n          });\r\n          return <>{sort}</>;\r\n        }),\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <Typography>재료 선택</Typography>\r\n            <TextField label=\"재료찾기\" onChange={(e) => this.namechange(e)} />\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={this.props.classes.details}>\r\n            {this.state.needlist}\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  details: {\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\nexport default withStyles(styles)(Need);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardRecipe from \"./CardRecipe\";\r\nimport Need from './Repeat/Need'\r\n\r\nclass Searchneed extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      needsearch: [],\r\n      needresult: null,\r\n      search: \"\",\r\n    };\r\n    this.searchSubmit = this.searchSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n  }\r\n  \r\n  async searchSubmit() {\r\n    if (this.state.needsearch.length === 0) {\r\n      alert(\"재료를 선택해주세요\");\r\n    } else {\r\n      await axios\r\n        .get(\"http://localhost:3001/search/needsearch\", {\r\n          params: {\r\n            data: this.state.needsearch,\r\n          },\r\n        })\r\n        .then((data) => {\r\n          this.setState({\r\n            needresult: Object.values(data.data.data).map((data, i) => (\r\n              <span key={i}>\r\n                <CardRecipe\r\n                  idx={data.idx}\r\n                  thumbnail={data.thumbnail}\r\n                  author={data.author}\r\n                  date={moment(data.board_date).format(\"YYYY-MM-DD hh:mm\")}\r\n                  view={data.view}\r\n                  like={data.like}\r\n                  hate={data.hate}\r\n                  title={data.title}\r\n                />\r\n              </span>\r\n            )),\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Need />\r\n\r\n        <Button variant=\"contained\" onClick={this.searchSubmit}>\r\n          검색\r\n        </Button>\r\n        {this.state.needresult}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  details: {\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\nexport default withStyles(styles)(Searchneed);\r\n","import React, { Component } from \"react\";\r\nimport Searchtitle from \"./Searchtitle\";\r\nimport Searchneed from \"./Searchneed\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value : 1\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e,value) {\r\n    this.setState({ value : value })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <> \r\n      <TabContext value={this.state.value}>\r\n        <Paper className={classes.paper}>\r\n        <TabList onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"제목으로 검색\" value=\"1\" />\r\n          <Tab label=\"재료로 검색\" value=\"2\" />\r\n        </TabList>\r\n        </Paper>\r\n        <TabPanel value=\"1\">\r\n        <Searchtitle />\r\n      </TabPanel>\r\n      <TabPanel value=\"2\">\r\n        <Searchneed />\r\n      </TabPanel>\r\n      </TabContext>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = theme => ({\r\n\r\n  paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Search);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Recipe from \"./Recipe\";\r\nimport styled from \"styled-components\";\r\n\r\nclass ModifyNeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needclass: null,\r\n      needtext: null,\r\n      needlist: null,\r\n      classtext : null,\r\n      classlist : null\r\n    };\r\n    this.needChange = this.needChange.bind(this);\r\n    this.needSubmit = this.needSubmit.bind(this);\r\n    this.needDelete = this.needDelete.bind(this);\r\n    this.classChange2 = this.classChange2.bind(this);\r\n    this.classSubmit = this.classSubmit.bind(this);\r\n    this.classDelete = this.classDelete.bind(this);\r\n    this.classChange = this.classChange.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    const result = await axios.get(\"http://localhost:3001/DBapi/needlist\");\r\n    console.log(result);\r\n    if (this.state.needlist === null) {\r\n      this.setState({\r\n        classlist : Object.values(result.data.data).map((data, i) => (\r\n          <label key={i}>\r\n            <input type=\"radio\" name=\"class\" onChange={this.classChange} value={data.class}></input>\r\n            {data.class}\r\n          </label>          \r\n        )),\r\n        needlist: Object.values(result.data.data).map((data, i) => {\r\n          let sort = [];\r\n          sort.push(\r\n            <>\r\n            <Needclass key={i}>{data.class}</Needclass>\r\n            </>\r\n          )\r\n          Object.values(data.need).map((data2, i) => {\r\n            sort.push(\r\n              <>\r\n              <Need key={i}>{data2.name} </Need>\r\n              </>\r\n            )\r\n          })\r\n          \r\n          return <>{sort}</>;\r\n        }),\r\n      });\r\n    }\r\n  }\r\n\r\n  //category control\r\n  async classChange(event) {\r\n    await this.setState({ needclass: event.target.value });\r\n  }\r\n  async classChange2(event) {\r\n    await this.setState({ classtext: event.target.value });\r\n  }\r\n  async needChange(event) {\r\n    await this.setState({ needtext: event.target.value });\r\n  }\r\n  async needSubmit(event) {\r\n    if (this.state.needtext === null) {\r\n      alert(\"재료명을 입력해주세요.\");\r\n    } else if (this.state.needclass === null) {\r\n      alert(\"재료의 종류를 선택해주세요.\");\r\n    } else {\r\n      await axios.post(\"http://localhost:3001/DBapi/needsave\", {\r\n        name: this.state.needtext,\r\n        class: this.state.needclass,\r\n      })\r\n      .then((data) => {\r\n        document.location.href=\"/modifyneed\";\r\n      })\r\n    }\r\n  }\r\n  async needDelete(event) {\r\n    await axios.post(\"http://localhost:3001/DBapi/needdelete\", {\r\n      name: this.state.needtext,\r\n      class: this.state.needclass,\r\n    });\r\n  }\r\n  async classSubmit(event) {\r\n    if (this.state.classtext === null) {\r\n      alert(\"재료명을 입력해주세요.\");\r\n    }  else {\r\n      await axios.post(\"http://localhost:3001/DBapi/classsave\", {\r\n        class: this.state.classtext,\r\n      });\r\n    }\r\n  }\r\n  async classDelete(event) {\r\n    await axios.post(\"http://localhost:3001/DBapi/classdelete\", {\r\n      class: this.state.classtext,\r\n    });\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.needSubmit();\r\n    }\r\n  };\r\n\r\n  //category control end\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"need_modify\">\r\n            <ul>\r\n              <div>\r\n                <div>\r\n              <label>\r\n                종류명\r\n              <input type=\"text\" onChange={this.classChange2}></input>\r\n              </label>\r\n              <br />\r\n              <a href=\"/modifyneed\" onClick={this.classSubmit}>\r\n                등록\r\n              </a>\r\n              <a href=\"/modifyneed\" onClick={this.classDelete}>\r\n                삭제\r\n              </a>\r\n              </div>\r\n\r\n              {this.state.classlist}\r\n\r\n            </div>\r\n            <div>\r\n                <label>\r\n                재료 이름\r\n              <input type=\"text\" onChange={this.needChange} onKeyPress={this.handleKeyPress}></input>\r\n              \r\n              </label>\r\n              </div><div>\r\n              <button type=\"submit\" onClick={this.needSubmit}>\r\n                등록\r\n              </button>\r\n              <button type=\"submit\" onClick={this.needDelete}>\r\n                삭제\r\n              </button>\r\n              </div>\r\n            </ul>\r\n        </div>\r\n        <hr />\r\n        <div id=\"need_list\">재료 리스트</div>\r\n        <Needlist>\r\n        {this.state.needlist}\r\n        </Needlist>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst Needclass = styled.div`\r\ncolor : #549A39;\r\nfont-size : 30px;`\r\nconst Need = styled.span\r\n`color : #B8DEA8;\r\nfont-size : 25px;`\r\nconst Needlist = styled.div\r\n`text-align:center;\r\nmargin-top : 1em;`\r\nexport default ModifyNeed;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nclass Modifysauce extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needtext: null,\r\n      needlist: null,\r\n    };\r\n    this.needChange = this.needChange.bind(this);\r\n    this.needSubmit = this.needSubmit.bind(this);\r\n    this.needDelete = this.needDelete.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    const result = await axios.get(\"http://localhost:3001/DBapi/saucelist\");\r\n    if (this.state.needlist === null) {\r\n      this.setState({\r\n        needlist: Object.values(result.data.data).map((data, i) => {\r\n          let sort = [];\r\n          sort.push(\r\n            <>\r\n            <Need key={i}>{data.name} </Need>\r\n            </>\r\n          )\r\n          return <>{sort}</>;\r\n        }),\r\n      });\r\n    }\r\n  }\r\n\r\n  //category control\r\n  async needChange(event) {\r\n    await this.setState({ needtext: event.target.value });\r\n  }\r\n  async needSubmit(event) {\r\n    if (this.state.needtext === null) {\r\n      alert(\"소스 이름을 입력해주세요.\");\r\n     } else {\r\n      await axios.post(\"http://localhost:3001/DBapi/saucesave\", {\r\n        sauce: this.state.needtext,\r\n      })\r\n      .then((data) => {\r\n        document.location.href=\"/modifysauce\";\r\n      })\r\n    }\r\n  }\r\n  async needDelete(event) {\r\n    await axios.post(\"http://localhost:3001/DBapi/saucedelete\", {\r\n      sauce: this.state.needtext,\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.needSubmit();\r\n    }\r\n  };\r\n\r\n  //category control end\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"need_modify\">\r\n            <ul>\r\n            <div>\r\n                <label>\r\n                양념 이름 \r\n              <input type=\"text\" onChange={this.needChange} onKeyPress={this.handleKeyPress}></input>\r\n              \r\n              </label>\r\n              </div><div>\r\n              <button type=\"submit\" onClick={this.needSubmit}>\r\n                등록\r\n              </button>\r\n              <button type=\"submit\" onClick={this.needDelete}>\r\n                삭제\r\n              </button>\r\n              </div>\r\n            </ul>\r\n        </div>\r\n        <hr />\r\n        <div id=\"need_list\">양념 리스트</div>\r\n        <Needlist>\r\n        {this.state.needlist}\r\n        </Needlist>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst Needclass = styled.div`\r\ncolor : #549A39;\r\nfont-size : 30px;`\r\nconst Need = styled.span\r\n`color : #B8DEA8;\r\nfont-size : 25px;`\r\nconst Needlist = styled.div\r\n`text-align:center;\r\nmargin-top : 1em;`\r\nexport default Modifysauce;\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n      super();\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      result : ''\r\n    };\r\n    this.PWChange = this.PWChange.bind(this);\r\n    this.IDChange = this.IDChange.bind(this);\r\n    this.Login = this.Login.bind(this);\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.Login();\r\n    }\r\n  };\r\n\r\n  PWChange = (event) => {\r\n      this.setState({\r\n          pw : event.target.value\r\n      })\r\n  };\r\n  IDChange = (event) => {\r\n    this.setState({\r\n        id : event.target.value\r\n    })\r\n  };\r\n  async Login() {\r\n    await axios.post('http://localhost:3001/users/login', \r\n    {\r\n      username : this.state.id,\r\n      password : this.state.pw,\r\n    },\r\n    { withCredentials : true }\r\n    )\r\n    .then((data) => {\r\n      document.location.href = '/';\r\n    })\r\n    .catch(err => {\r\n      this.setState({\r\n        result : <Typography>아이디나 비번이 맞지 않습니다.</Typography>\r\n      })\r\n    })\r\n      \r\n    }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container maxWidth=\"xs\">\r\n          <Typography component=\"h1\" variant=\"h5\">로그인하기</Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"ID\"\r\n            name=\"username\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => this.IDChange(e)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => this.PWChange(e)}\r\n            onKeyPress={(e) => this.handleKeyPress(e)}\r\n          />\r\n            <Button\r\n            className={this.props.classes.button}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={() => this.Login()}\r\n          >\r\n            로그인\r\n          </Button>\r\n            {this.state.result}\r\n            <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\" style={{color : 'black', textDecoration:'none'}}>\r\n                비밀번호 찾기\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/register\" variant=\"body2\"style={{color : 'black', textDecoration:'none'}}>\r\n                회원가입\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = theme => ({\r\n\r\n  button : {\r\n    backgroundColor : '#AFDB9F',\r\n    color : 'white'\r\n  }\r\n});\r\nexport default withStyles(styles)(Login);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from 'styled-components';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      pw2 : '',\r\n      nickname: \"\",\r\n      result : ''\r\n    };\r\n    this.PWChange = this.PWChange.bind(this);\r\n    this.PW2Change = this.PW2Change.bind(this);\r\n    this.IDChange = this.IDChange.bind(this);\r\n    this.NICKChange = this.NICKChange.bind(this);\r\n    this.Register = this.Register.bind(this);\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.Register();\r\n    }\r\n  };\r\n\r\n  PWChange = (event) => {\r\n    this.setState({\r\n      pw: event.target.value,\r\n    });\r\n  };\r\n  PW2Change = (event) => {\r\n    this.setState({\r\n      pw2: event.target.value,\r\n    });\r\n  };\r\n  IDChange = (event) => {\r\n    this.setState({\r\n      id: event.target.value,\r\n    });\r\n  };\r\n  NICKChange = (event) => {\r\n    this.setState({\r\n      nickname: event.target.value,\r\n    });\r\n  };\r\n\r\n  async Register() {\r\n    await axios\r\n      .post(\"http://localhost:3001/users/signup\", {\r\n        username: this.state.id,\r\n        password: this.state.pw,\r\n        password2 : this.state.pw2,\r\n        nickname: this.state.nickname,\r\n      })\r\n      .then(data => {\r\n        if(data.data !== 200) {\r\n            this.setState({ \r\n              result : <Text>{data.data}</Text>\r\n            })\r\n        }\r\n        else {\r\n          document.location.href = '/';\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Main>\r\n          <Text>회원가입</Text>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"ID\"\r\n            name=\"username\"\r\n            autoComplete=\"id\"\r\n            autoFocus\r\n            onChange={(e) => this.IDChange(e)}\r\n          />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) => this.PWChange(e)}\r\n          />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) => this.PW2Change(e)}\r\n          />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"nickname\"\r\n            label=\"Nickname\"\r\n            onChange={(e) => this.NICKChange(e)}\r\n            onKeyPress={(e) => this.handleKeyPress(e)}\r\n          />\r\n            <Button\r\n            className={this.props.classes.button}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={() => this.Register()}\r\n          >\r\n            로그인\r\n          </Button>\r\n          {this.state.result}\r\n        </Main>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = theme => ({\r\n\r\n  button : {\r\n    backgroundColor : '#AFDB9F',\r\n    color : 'white'\r\n  }\r\n});\r\nconst Main = styled.div\r\n`text-align:center;`\r\nconst Text = styled.div\r\n`\r\nfont-size : 30px;\r\ncolor : #549A39;\r\n`\r\nconst Inputform = styled.input\r\n`\r\ndisplay : block;\r\npadding-left : 1em;\r\nmargin:auto;\r\nwidth : 500px;\r\nheight : 60px;\r\nmargin-top: 1em;\r\ncolor : #F48060;\r\nborder : 1px solid #CFCFCF;\r\n&:focus {\r\n  outline : 2px solid #AFDB9F;\r\n}\r\n`\r\nconst Submitform = styled.button\r\n`\r\ndisplay : block;\r\nmargin:auto;\r\nwidth:400px;\r\nheight : 60px;\r\nborder:1px solid gray;\r\nborder-radius : 10px;\r\nbackground-color : #AFDB9F;\r\ncolor : white;\r\nfont-size : 25px;\r\nfont-family : 'KyoboHand';\r\ntext-decoration : none;\r\nmargin-top : 1em;\r\ntext-align:center;\r\n\r\n&:hover {\r\n  background-color : #549A39;\r\n}\r\n`;\r\n\r\nexport default withStyles(styles)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Manage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container><Typography className={this.props.classes.main} variant=\"h4\">내 냉장고를 부탁해</Typography></Container>\r\n        <Mainnav>\r\n        <Navul>\r\n        <Navli>\r\n              <Text to=\"/modifyCT\" style={{ textDecoration: 'none' }}>카테고리 편집</Text>\r\n            </Navli>\r\n            <Navli>\r\n              <Text to=\"/modifyneed\" style={{ textDecoration: 'none' }}>재료 편집</Text>\r\n            </Navli>\r\n            <Navli>\r\n              <Text to=\"/modifysauce\" style={{ textDecoration: 'none' }}>양념 편집</Text>\r\n            </Navli>\r\n        </Navul>\r\n        </Mainnav>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = theme => ({\r\n  main: {\r\n    textAlign:'center',\r\n    textDecoration : 'none',\r\n    color : '#AFDB9F',\r\n    '&:hover' : {\r\n      color : '#F48060'\r\n    }\r\n  }\r\n});\r\nconst Mainnav = styled.nav`\r\n  margin-top: 1em;\r\n  width: 100%;\r\n  background-color : #AFDB9F;\r\n`;\r\nconst Navul = styled.ul`\r\n  text-align: center;\r\n`;\r\nconst Navli = styled.li`\r\n  padding: 1em;\r\n  display: inline-block;\r\n  font-size: 20px;\r\n`;\r\nconst Text = styled(Link)\r\n`color : white;\r\n&:hover {\r\n    color : #F48060\r\n};`;\r\nexport default withStyles(styles)(Manage);\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nclass Modal2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        open: false,\r\n    }\r\n    this.handleopen = this.handleopen.bind(this);\r\n    this.handleclose = this.handleclose.bind(this);\r\n  }\r\n  componentDidUpdate() {\r\n      \r\n  }\r\n  handleopen() {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  }\r\n  handleclose() {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          style={{ marginTop: \"40px\" }}\r\n          color=\"inherit\"\r\n          aria-label=\"search\"\r\n        >\r\n          <ListAltIcon fontSize=\"large\" onClick={this.handleopen} />\r\n        </IconButton>\r\n\r\n        <Modal\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          open={this.state.open}\r\n          onClose={this.handleclose}\r\n          aria-labelledby=\"CategoryModal\"\r\n          aria-describedby=\"Category\"\r\n        >\r\n          <>\r\n            <div className={this.props.classes.modal}>\r\n              {this.props.needlist}\r\n            </div>\r\n          </>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  modal: {\r\n    overflow: \"scroll\",\r\n    position: \"absolute\",\r\n    width: 300,\r\n    height: \"30%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n});\r\nexport default withStyles(styles)(Modal2);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Modal2 from \"./Repeat/Modal2\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nclass Test extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      need1: [],\r\n      needlist: null,\r\n      values: [],\r\n      result: null,\r\n      LoadNeed2: null,\r\n    };\r\n    this.needchange = this.needchange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.SaveNeed = this.SaveNeed.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.LoadRefri();\r\n  }\r\n\r\n  async LoadRefri() {\r\n    await axios\r\n      .get(\"http://localhost:3001/users/loadneed\", { withCredentials: true })\r\n      .then((data) => {\r\n        let sort = [];\r\n        data.data.map((data2, i) => {\r\n          sort.push(data2.title);\r\n        });\r\n\r\n        this.setState({\r\n          values: sort,\r\n        });\r\n      })\r\n      .then(async () => {\r\n        await this.LoadNeed();\r\n      })\r\n      .then(() => {\r\n        let sort = [];\r\n        Object.values(this.state.need1).map((data, i) => {\r\n          if(this.state.values.indexOf(data.title) !== -1) {\r\n            sort.push(this.state.need1[i]);\r\n          }\r\n        })\r\n        this.setState({\r\n          values : sort\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async LoadNeed() {\r\n    await axios.get(\"http://localhost:3001/need/needlist\").then((result) => {\r\n      let sort2 = [];\r\n      const sort3 = Object.values(result.data.data).map((data, i) => {\r\n        let sort = [];\r\n        sort.push(\r\n          <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            key={i}\r\n          >\r\n            <Typography>{data.class}</Typography>\r\n          </ExpansionPanelSummary>\r\n        );\r\n        Object.values(data.need).map((data2, i2) => {\r\n          const checked = false;\r\n          sort2.push({ title: data2.name });\r\n          sort.push(\r\n            <>\r\n              <ExpansionPanelDetails key={i}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      onChange={(e) => this.needchange(e)} //여길보고 기억해내!!\r\n                      name={data.class}\r\n                      color=\"primary\"\r\n                      value={data2.name}\r\n                      checked={\r\n                        this.state.values.indexOf(data2.name) !== -1\r\n                          ? !checked\r\n                          : checked\r\n                      }\r\n                    />\r\n                  }\r\n                  label={data2.name}\r\n                />\r\n              </ExpansionPanelDetails>\r\n            </>\r\n          );\r\n        });\r\n        return <ExpansionPanel>{sort}</ExpansionPanel>;\r\n      });\r\n      this.setState({\r\n        need1: sort2,\r\n        needlist: sort3,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange(event, values) {\r\n    this.setState({\r\n      values: values,\r\n    });\r\n  }\r\n  needchange(event) {\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        values: this.state.values.concat(event.target.value),\r\n      });\r\n    } else {\r\n      const a = this.state.values;\r\n      const b = event.target.value;\r\n      a.splice(a.indexOf(b), 1);\r\n      this.setState({\r\n        values: a,\r\n      });\r\n    }\r\n  }\r\n  async SaveNeed() {\r\n    await axios\r\n      .post(\r\n        \"http://localhost:3001/users/saveneed\",\r\n        {\r\n          need: this.state.values,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.values);\r\n    return (\r\n      <>\r\n        <Autocomplete\r\n          multiple\r\n          style={{ width: \"100%\" }}\r\n          id=\"checkboxes-tags-demo\"\r\n          options={this.state.need1}\r\n          disableCloseOnSelect\r\n          getOptionLabel={(option) => option.title}\r\n          onChange={this.handleChange}\r\n          value = {this.state.values}\r\n          renderOption={(option, { selected }) => {\r\n            return (\r\n              <>\r\n                <Checkbox\r\n                  icon={icon}\r\n                  checkedIcon={checkedIcon}\r\n                  style={{ marginRight: 8 }}\r\n                  checked={selected}\r\n                />\r\n                {option.title}\r\n              </>\r\n            );\r\n          }}\r\n          renderInput={(params) => {\r\n            return (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"재료검색\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Modal2 needlist={this.state.needlist} />\r\n\r\n        <Button variant=\"contained\" onClick={this.SaveNeed}>\r\n          저장\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={this.searchSubmit}>\r\n          초기화\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst styles = (theme) => ({\r\n  details: {\r\n    flexDirection: \"column\",\r\n  },\r\n  modal: {\r\n    overflow: \"scroll\",\r\n    position: \"absolute\",\r\n    width: 300,\r\n    height: \"30%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n});\r\nexport default withStyles(styles)(Test);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Info extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        인포\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Info;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MyRefri extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer id=\"footer\">\r\n                내냉장고\r\n        </footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MyRefri;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './component/Header'\r\nimport Content from './component/Content'\r\nimport Footer from './component/Footer.js'\r\nimport { BrowserRouter as Router, Route  } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history'\r\nimport List from './component/List'\r\nimport Write from './component/Write'\r\nimport Detail from './component/Detail'\r\nimport Modify from './component/Modify'\r\nimport ModifyCT from './component/ModifyCT'\r\nimport Search from './component/Search'\r\nimport ModifyNeed from './component/ModifyNeed'\r\nimport Modifysauce from './component/Modifysauce'\r\nimport Login from './component/User/Login'\r\nimport Register from './component/User/Register'\r\nimport Container from '@material-ui/core/Container';\r\nimport Manage from './component/Manage';\r\nimport Test from './component/Test';\r\nimport Info from './component/User/Info';\r\nimport MyRefri from './component/User/MyRefri';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Router>\r\n    <Header />\r\n    \r\n    <Content />\r\n    <Container>\r\n                <Route exact path=\"/board/:idx\" component = {List} />\r\n                <Route exact path=\"/write\" component = {Write} />\r\n                <Route exact path=\"/modify/:idx\" component = {Modify} />\r\n                <Route exact path=\"/board/detail/:recipeidx\" component = {Detail} />\r\n                <Route exact path=\"/modifyCT\" component = {ModifyCT} />\r\n                <Route exact path=\"/modifyneed\" component = {ModifyNeed} />\r\n                <Route exact path=\"/search\" component = {Search} />\r\n                <Route exact path=\"/login\" component = {Login} />\r\n                <Route exact path=\"/register\" component = {Register} />\r\n                <Route exact path=\"/modifysauce\" component = {Modifysauce} />\r\n                <Route exact path=\"/test\" component = {Test} />\r\n                <Route exact path=\"/manage\" component = {Manage} />\r\n                <Route exact path=\"/myrefri\" component = {MyRefri} />\r\n                <Route exact path=\"/info\" component = {Info} />\r\n                </Container></Router>\r\n            \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { observable, action } from \"mobx\";\r\nimport axios from \"axios\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport {  Link  } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nexport default class category {\r\n  @observable categorylist = null;\r\n\r\n  @observable categorylist2 = null;\r\n  \r\n\r\n  @action async getCategoryList() {\r\n    \r\n    const result = await axios.get(\"http://localhost:3001/category/categorylist\");\r\n    if (this.categorylist === null) {\r\n      this.categorylist = Object.values(result.data.data)\r\n        .map((data, i) => (\r\n          <Listli key={i}>\r\n            <CTtitle to={\"/board/\" + data.number}>{data.name}</CTtitle>\r\n          </Listli>\r\n        ));\r\n        this.categorylist2 = Object.values(result.data.data)\r\n        .map((data, i) => {\r\n            return data;\r\n        })    \r\n    }\r\n  }\r\n\r\n}\r\nconst Listli = styled.li\r\n`\r\ndisplay : inline-block;\r\nlist-style: none;\r\nfont-size : 20px;\r\nmargin-left:1rem;\r\n\r\n`\r\nconst CTtitle = styled(Link)\r\n`color : black;\r\ntext-decoration : none`","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'mobx-react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport categoryStore from './stores/category'\r\nimport {\r\n  useTheme,\r\n  createMuiTheme,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: 'KyoboHand',\r\n    fontSize : '16'\r\n  },\r\n});\r\n\r\nconst category = new categoryStore();\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n  <Provider category={category}>\r\n    <App />\r\n  </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}